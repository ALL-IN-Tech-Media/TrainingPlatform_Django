# Generated by Django 4.2.17 on 2025-06-06 03:01

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0007_remove_usertoken_email'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='品牌名称')),
                ('description', models.TextField(blank=True, null=True, verbose_name='品牌描述')),
                ('logo_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='品牌Logo')),
                ('category', models.CharField(blank=True, max_length=100, null=True, verbose_name='品牌分类')),
                ('source', models.CharField(blank=True, max_length=100, null=True, verbose_name='来源')),
                ('collab_count', models.IntegerField(default=0, verbose_name='合作数量')),
                ('creators_count', models.IntegerField(default=0, verbose_name='创作者数量')),
                ('campaign_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='活动ID')),
                ('total_gmv_achieved', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='总GMV')),
                ('total_views_achieved', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='总浏览量')),
                ('shop_overall_rating', models.DecimalField(decimal_places=1, default=0.0, max_digits=3, verbose_name='店铺评分')),
                ('dataset_id_list', models.JSONField(blank=True, default=list, help_text='所有关联的知识库ID列表', verbose_name='知识库ID列表')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
            ],
            options={
                'verbose_name': '品牌',
                'verbose_name_plural': '品牌',
            },
        ),
        migrations.CreateModel(
            name='CreatorProductMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_matched', models.BooleanField(default=False, verbose_name='是否匹配')),
                ('match_score', models.FloatField(blank=True, null=True, verbose_name='匹配度分数')),
            ],
            options={
                'verbose_name': '达人-产品匹配',
                'verbose_name_plural': '达人-产品匹配',
            },
        ),
        migrations.CreateModel(
            name='CreatorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='达人名称')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='头像图片')),
                ('avatar_url', models.TextField(blank=True, null=True, verbose_name='头像URL')),
                ('platform_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Platform ID')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='电子邮箱')),
                ('instagram', models.CharField(blank=True, max_length=255, null=True, verbose_name='Instagram账号')),
                ('location', models.CharField(blank=True, max_length=100, null=True, verbose_name='位置')),
                ('live_schedule', models.CharField(blank=True, max_length=255, null=True, verbose_name='直播时间表')),
                ('profile', models.CharField(choices=[('tiktok', 'TikTok'), ('instagram', 'Instagram'), ('youtube', 'YouTube'), ('other', '其他平台')], default='tiktok', max_length=20, verbose_name='达人平台')),
                ('hashtags', models.TextField(blank=True, help_text='以#分隔的标签，例如:#fashion#beauty#lifestyle', null=True, verbose_name='标签')),
                ('trends', models.TextField(blank=True, help_text='创作者相关的趋势关键词', null=True, verbose_name='趋势')),
                ('region', models.CharField(blank=True, max_length=100, null=True, verbose_name='地区')),
                ('tiktok_link', models.URLField(blank=True, max_length=500, null=True, verbose_name='主页链接')),
                ('us_creator_level', models.CharField(blank=True, max_length=50, null=True, verbose_name='对标美区达人等级')),
                ('price_gbp', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='报价(英镑)')),
                ('price_usd', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='报价(美金)')),
                ('gmv_gbp', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='GMV(英镑)')),
                ('link', models.URLField(blank=True, max_length=500, null=True, verbose_name='链接')),
                ('category', models.CharField(blank=True, choices=[('Phones & Electronics', '手机与电子产品'), ('Homes Supplies', '家居用品'), ('Kitchenware', '厨房用品'), ('Textiles & Soft Furnishings', '纺织品和软装'), ('Household Appliances', '家用电器'), ('Womenswear & Underwear', '女装和内衣'), ('Muslim Fashion', '穆斯林时尚'), ('Shoes', '鞋类'), ('Beauty & Personal Care', '美容和个人护理'), ('Computers & Office Equipment', '电脑和办公设备'), ('Pet Supplies', '宠物用品'), ('Baby & Maternity', '婴儿和孕妇用品'), ('Sports & Outdoor', '运动和户外'), ('Toys', '玩具'), ('Furniture', '家具'), ('Tools & Hardware', '工具和硬件'), ('Home Improvement', '家居装修'), ('Automotive & Motorcycle', '汽车和摩托车'), ('Fashion Accessories', '时尚配饰'), ('Food & Beverages', '食品和饮料'), ('Health', '健康'), ('Books, Magazines & Audio', '书籍、杂志和音频'), ('Kids Fashion', '儿童时尚'), ('Menswear & Underwear', '男装和内衣'), ('Luggage & Bags', '行李和包'), ('Pre-Owned Collections', '二手收藏'), ('Jewellery Accessories & Derivatives', '珠宝配饰及衍生品')], max_length=100, null=True, verbose_name='类别')),
                ('e_commerce_level', models.IntegerField(blank=True, choices=[(1, 'L1'), (2, 'L2'), (3, 'L3'), (4, 'L4'), (5, 'L5'), (6, 'L6'), (7, 'L7')], null=True, verbose_name='电商能力等级')),
                ('exposure_level', models.CharField(blank=True, choices=[('KOC-1', 'KOC-1'), ('KOC-2', 'KOC-2'), ('KOL-1', 'KOL-1'), ('KOL-2', 'KOL-2'), ('KOL-3', 'KOL-3')], max_length=10, null=True, verbose_name='曝光等级')),
                ('followers', models.IntegerField(default=0, verbose_name='粉丝数')),
                ('gmv', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='GMV(千美元)')),
                ('items_sold', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='售出商品数量')),
                ('avg_video_views', models.IntegerField(blank=True, default=0, null=True, verbose_name='平均视频浏览量')),
                ('pricing', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='个人定价')),
                ('pricing_package', models.CharField(blank=True, max_length=100, null=True, verbose_name='套餐定价')),
                ('collab_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='合作次数')),
                ('latest_collab', models.CharField(blank=True, max_length=100, null=True, verbose_name='最新合作')),
                ('e_commerce_platforms', models.JSONField(blank=True, null=True, verbose_name='电商平台')),
                ('gmv_by_channel', models.JSONField(blank=True, null=True, verbose_name='GMV按渠道分布')),
                ('gmv_by_category', models.JSONField(blank=True, null=True, verbose_name='GMV按类别分布')),
                ('mcn', models.CharField(blank=True, max_length=255, null=True, verbose_name='MCN机构')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '达人信息',
                'verbose_name_plural': '达人信息',
                'db_table': 'creator_profiles',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('user', models.CharField(max_length=100)),
                ('task_type', models.CharField(max_length=16)),
                ('description', models.TextField(default='')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='产品名称')),
                ('description', models.TextField(blank=True, null=True, verbose_name='产品描述')),
                ('image_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='产品图片')),
                ('pid', models.CharField(blank=True, max_length=100, null=True, verbose_name='产品ID')),
                ('commission_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='佣金率')),
                ('open_collab', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='开放合作率')),
                ('available_samples', models.IntegerField(default=0, verbose_name='可用样品数')),
                ('sales_price_min', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='最低销售价')),
                ('sales_price_max', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='最高销售价')),
                ('stock', models.IntegerField(default=0, verbose_name='库存')),
                ('items_sold', models.IntegerField(default=0, verbose_name='已售数量')),
                ('product_rating', models.DecimalField(decimal_places=1, default=0, max_digits=3, verbose_name='产品评分')),
                ('reviews_count', models.IntegerField(default=0, verbose_name='评价数量')),
                ('collab_creators', models.IntegerField(default=0, verbose_name='合作创作者数')),
                ('tiktok_shop', models.BooleanField(default=False, verbose_name='是否TikTok商店')),
                ('dataset_id', models.CharField(blank=True, help_text='外部知识库系统中的ID', max_length=100, null=True, verbose_name='知识库ID')),
                ('external_id', models.CharField(blank=True, help_text='外部系统中的唯一标识', max_length=100, null=True, verbose_name='外部ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='datasets.brand', verbose_name='所属品牌')),
                ('creators', models.ManyToManyField(related_name='matched_products', through='datasets.CreatorProductMatch', to='datasets.creatorprofile', verbose_name='匹配达人')),
            ],
            options={
                'verbose_name': '产品',
                'verbose_name_plural': '产品',
            },
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('task_type', models.CharField(max_length=16)),
                ('size', models.CharField(max_length=64)),
                ('description', models.TextField(default='')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('categories', models.JSONField(default=list)),
                ('is_upload', models.BooleanField(default=False)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.user')),
            ],
        ),
        migrations.AddField(
            model_name='creatorproductmatch',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datasets.creatorprofile', verbose_name='达人'),
        ),
        migrations.AddField(
            model_name='creatorproductmatch',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datasets.product', verbose_name='产品'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['brand'], name='datasets_pr_brand_i_fa29f8_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['dataset_id'], name='datasets_pr_dataset_d6d37c_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_active'], name='datasets_pr_is_acti_faa914_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['pid'], name='datasets_pr_pid_4a7160_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('brand', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='creatorproductmatch',
            unique_together={('creator', 'product')},
        ),
    ]
